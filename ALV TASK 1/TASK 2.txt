*&---------------------------------------------------------------------*
*& Report ZALV_TASK_2
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*

REPORT ZALV_TASK_2.


*======================================================================*
* TYPE DECLARTIONS  *
*======================================================================*
TYPE-POOLS: SLIS,
            SHLP.

TABLES: ZEMP,
        ZBRANCHE,
        ZDEPARTMENT,
        ZGRADES.

*======================================================================*
* DATA DEFINIATIONS  *
*======================================================================*


DATA: IT            TYPE TABLE OF ZTABLE_FINAL,
      WA            TYPE ZTABLE_FINAL,
      IT_EMP        TYPE TABLE OF ZEMP,
      WA_EMP        TYPE ZEMP,
      IT_DEPT       TYPE TABLE OF ZDEPARTMENT,
      WA_DEPT       TYPE ZDEPARTMENT,
      IT_GRADE      TYPE TABLE OF ZGRADES,
      WA_GRADE      TYPE ZGRADES,
      IT_BRANCHE    TYPE TABLE OF ZBRANCHE,
      WA_BRANCHE    TYPE ZBRANCHE,
      IT_FIELDCAT   TYPE SLIS_T_FIELDCAT_ALV,
      WA_FIELDCAT   TYPE SLIS_FIELDCAT_ALV,
      WA_LAYO       TYPE SLIS_LAYOUT_ALV.

DATA FLAG TYPE I.

SELECT * FROM ZDEPARTMENT INTO TABLE IT_DEPT.
SELECT * FROM ZBRANCHE INTO TABLE IT_BRANCHE.
SELECT * FROM ZGRADES INTO TABLE IT_GRADE.

*======================================================================*
* SELECTION SCREEN  *
*======================================================================*

SELECTION-SCREEN BEGIN OF BLOCK SRC WITH FRAME.

  SELECT-OPTIONS: V1 FOR ZEMP-EMP_ID MATCHCODE OBJECT ZSH_EMP_ID .
  SELECTION-SCREEN SKIP 1.

  SELECT-OPTIONS V2 FOR ZDEPARTMENT-DEPT_ID MATCHCODE OBJECT ZSH_DEPT_ID.
  SELECTION-SCREEN SKIP 1.

  SELECT-OPTIONS V3 FOR ZBRANCHE-BRANCH_ID MATCHCODE OBJECT ZSH_BRH_ID .
  SELECTION-SCREEN SKIP 1.

  SELECT-OPTIONS V4 FOR ZGRADES-GRADE_ID MATCHCODE OBJECT ZSH_GRD_ID .
  SELECTION-SCREEN SKIP 1.

SELECTION-SCREEN END OF BLOCK SRC.

*======================================================================*
* LOGIC PART *
*======================================================================*

START-OF-SELECTION.

  PERFORM READ_DATA.
  PERFORM BUILD_ALV.

END-OF-SELECTION.

*======================================================================*
* SUB ROUTINES  *
*======================================================================*

** OOOOHHH BOOOOOOY IT WORKS FINALLY :D

FORM SET_PF_STATUS USING RT_EXTAB TYPE SLIS_T_EXTAB.

  SET PF-STATUS 'ZSTANDARD'. " T-CODE SE41 COPYING STANDARD FROM SAPLKKBL

ENDFORM.

FORM READ_DATA.
    SELECT  ZEMP~EMP_ID
            ZEMP~EMP_NAME
            ZEMP~EMP_SALARY
            ZDEPARTMENT~DEPT_NAME
            ZBRANCHE~BRANCH_NAME
            ZGRADES~GRADE_DESCRIPTION
        INTO  CORRESPONDING FIELDS OF TABLE IT
        FROM ZEMP
        INNER JOIN ZDEPARTMENT
        ON ZDEPARTMENT~DEPT_ID EQ ZEMP~EMP_DEP_ID
        INNER JOIN ZGRADES
        ON ZGRADES~GRADE_ID EQ ZEMP~EMP_GRAD_ID
        INNER JOIN ZBRANCHE
        ON ZBRANCHE~BRANCH_ID EQ ZEMP~EMP_BRANCH_ID
        WHERE
        EMP_ID IN V1
        AND DEPT_ID IN V2
        AND BRANCH_ID IN V3
        AND GRADE_ID IN V4.
ENDFORM.

FORM USER_COMMAND USING R_UCOMM TYPE SY-UCOMM
      R_SELFIELD TYPE SLIS_SELFIELD.

  IF R_UCOMM EQ '&DATA_SAVE'.
    LOOP AT IT INTO WA.
      FLAG = 0." TO PREVENT USER FROM ENTERING UNKNOWN DATA
      LOOP AT IT_DEPT INTO WA_DEPT.
        IF WA_DEPT-DEPT_NAME EQ WA-DEPT_NAME.
          WA_EMP-EMP_DEP_ID = WA_DEPT-DEPT_ID.
          FLAG = 1.
        ENDIF.
      ENDLOOP.
      IF FLAG <> 1.
        MESSAGE 'INVALID DATA' TYPE 'E'.
        EXIT.
      ENDIF.
      FLAG = 0.
      LOOP AT IT_BRANCHE INTO WA_BRANCHE.
        IF WA_BRANCHE-BRANCH_NAME EQ WA-BRANCH_NAME.
          WA_EMP-EMP_BRANCH_ID = WA_BRANCHE-BRANCH_ID.
          FLAG = 1.
        ENDIF.
      ENDLOOP.
      IF FLAG <> 1.
        MESSAGE 'INVALID DATA' TYPE 'E'.
        EXIT.
      ENDIF.
      FLAG = 0.
      LOOP AT IT_GRADE INTO WA_GRADE.
        IF WA_GRADE-GRADE_DESCRIPTION EQ WA-GRADE_DESCRIPTION.
          WA_EMP-EMP_GRAD_ID = WA_GRADE-GRADE_ID.
          FLAG = 1.
        ENDIF.
      ENDLOOP.
      IF FLAG <> 1.
        MESSAGE 'INVALID DATA' TYPE 'E'.
        EXIT.
      ENDIF.
      WA_EMP-EMP_ID = WA-EMP_ID.
      WA_EMP-EMP_NAME = WA-EMP_NAME.
      WA_EMP-EMP_SALARY = WA-EMP_SALARY.
      MODIFY ZEMP FROM WA_EMP.
      R_SELFIELD-REFRESH    = 'X'.
    ENDLOOP.
  ELSEIF R_UCOMM EQ '&DELETE'.
    READ TABLE IT INTO WA INDEX R_SELFIELD-TABINDEX.
    DELETE  FROM ZEMP WHERE EMP_ID = WA-EMP_ID.
    PERFORM READ_DATA.
    R_SELFIELD-REFRESH    = 'X'.
  ENDIF.
ENDFORM.

FORM BUILD_ALV.

  WA_FIELDCAT-FIELDNAME  = 'EMP_ID'.    " Fieldname in the data table
  WA_FIELDCAT-SELTEXT_L  = 'ID'.   " Column description in the output
  WA_FIELDCAT-KEY = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.

  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME  = 'EMP_NAME'.
  WA_FIELDCAT-SELTEXT_L  = 'EMPLOYEE NAME'.
  WA_FIELDCAT-EDIT = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.


  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME  = 'EMP_SALARY'.
  WA_FIELDCAT-SELTEXT_L  = 'EMPLOYEE SALARY'.
  WA_FIELDCAT-DO_SUM     = 'X'.
  WA_FIELDCAT-EDIT = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.

  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME  = 'DEPT_NAME'.
  WA_FIELDCAT-SELTEXT_L  = 'DEPARTMENT NAME'.
  WA_FIELDCAT-EDIT = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.

  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME  = 'GRADE_DESCRIPTION'.
  WA_FIELDCAT-SELTEXT_L  = 'GRADE_DESCRIPTION'.
  WA_FIELDCAT-EDIT = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.

  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-FIELDNAME  = 'BRANCH_NAME'.
  WA_FIELDCAT-SELTEXT_L  = 'BRANCH_NAME'.
  WA_FIELDCAT-EDIT = 'X'.
  APPEND WA_FIELDCAT TO IT_FIELDCAT.

  SORT IT BY EMP_ID.

  WA_LAYO-COLWIDTH_OPTIMIZE = 'X' .

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
  EXPORTING
    I_CALLBACK_PROGRAM = SY-REPID

    I_CALLBACK_USER_COMMAND = 'USER_COMMAND'

    I_CALLBACK_PF_STATUS_SET = 'SET_PF_STATUS'

    IT_FIELDCAT   = IT_FIELDCAT

    IS_LAYOUT = WA_LAYO

  TABLES
    T_OUTTAB      = IT.
ENDFORM.